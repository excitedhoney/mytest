<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC 
	"-//Puppy Crawl//DTD Check Configuration 1.2//EN" 
	"http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<!-- 
	
	cuteinfo checkstyle configuration that checks the coding conventions 
	
	Checkstyle is very configurable. Be sure to read the documentation at
	
	http://checkstyle.sf.net (or in your downloaded distribution).
	
	Most Checks are configurable, be sure to consult the documentation.
	
	To completely disable a check, just comment it out or delete it from the file.
	
	Finally, it is worth reading the documentation.
-->
<module name="Checker">


  <!-- ati 2010.7   set default severity to warnig to stay compatible -->   

	<property name="severity" value="warning" />

	<!-- Checks that a package.html file exists for each package.     -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
	<!--  <module name="PackageHtml" />	-->

	<!-- Checks whether files end with a new line.                        -->
	<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
	<module name="NewlineAtEndOfFile" />

	<!-- Checks that property files contain the same keys.         -->
	<!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
	<module name="Translation" />

	<module name="TreeWalker">

		<property name="tabWidth" value="4" />
		<property name="charset" value="UTF-8" />

		<!-- Checks for Javadoc comments.                     -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocType">
			<!-- Checks for authorFormat .                     -->
			<property name="authorFormat" value="\S" />
			<!-- Checks for versionFormat -->
			<property name="versionFormat" value="\$Revision.*\$" />
		</module>


	<!-- Checks for protected method                    -->
		<module name="JavadocMethod">
		<!-- allow  Undeclared    Run Time Error                -->		 
			<property name="allowUndeclaredRTE" value="true" />
			<property name="allowThrowsTagsForSubclasses" value="true" />
			<property name="allowMissingReturnTag" value="true"/>			
			<property name="allowMissingPropertyJavadoc" value="true" />
			<property name="tokens" value="METHOD_DEF" />
			<property name="scope" value="protected"/>
			<property name="severity" value="warning"/>
		</module>
		<!-- Checks for private method                    -->
		<module name="JavadocMethod">
			<property name="allowUndeclaredRTE" value="true" />
			<property name="allowThrowsTagsForSubclasses" value="true" />
			<property name="allowMissingReturnTag" value="true"/>			
			<property name="allowMissingPropertyJavadoc" value="true" />
			<property name="tokens" value="METHOD_DEF" />
			<property name="scope" value="private"/>
			<property name="severity" value="info"/>
		</module>
		<!-- public err lever is warning                    -->
		<module name="JavadocVariable">
            <property name="severity" value="warning"/>
            <property name="scope" value="public"/>
        </module>
        
        	<!-- protected err lever is info                    -->
        <module name="JavadocVariable">
            <property name="severity" value="info"/>
            <property name="scope" value="protected"/>
        </module>
        
        	<!-- public err lever is info                    -->
        <module name="JavadocVariable">
            <property name="severity" value="info"/>
            <property name="scope" value="public"/>
        </module>
        
        
		<module name="JavadocStyle">
			<property name="checkEmptyJavadoc" value="true" />
			<property name="checkFirstSentence" value="false" />
		</module>
		<!-- only supported in CheckStyle 4.4+ 
			<module name="WriteTag">
			<property name="tag" value="@incomplete" />
			<property name="tagFormat" value="\S" />
			<property name="severity" value="ignore" />
			<property name="tagSeverity" value="warning" />
			</module>
		-->

		<!-- Checks for Naming Conventions.                  -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName" />
		<module name="LocalFinalVariableName" />
		<module name="LocalVariableName" />
		<module name="MemberName" />
		<module name="MethodName" />
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
		</module>
		<module name="ParameterName" />
		<module name="StaticVariableName" />
		<module name="TypeName" />


		<!-- Checks for Headers                                -->
		<!-- See http://checkstyle.sf.net/config_header.html   -->
		<module name="Header">
			<property name="headerFile"
				value="${checkstyle.header.file}" />
			<property name="ignoreLines" value="2" />
		</module>

		<!-- Checks for imports                              -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport" />
		<module name="IllegalImport" />
		<!-- defaults to sun.* packages -->
		<module name="RedundantImport" />
		<module name="UnusedImports" />


		<!-- Checks for Size Violations.                    -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<module name="FileLength" />
	
	
		<!-- Checks for line  -->
		<module name="LineLength">
			<!-- meihangr bu chaogo 120 ge zi. 每行不超过120个字--> 
			<property name="max" value="120" />
		</module>
		
		<module name="MethodLength" />
		<!-- defaults to 150 max lines -->
		<module name="ParameterNumber" />

		<!-- Checks for whitespace                               -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad" />
		<module name="MethodParamPad" />
		
		<!-- check fengefu heude konbai 检查分隔符后的空白 -->
		<module name="NoWhitespaceAfter">
			<property name="tokens"
				value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS" />
		</module>
		<module name="NoWhitespaceBefore" />
		<module name="OperatorWrap" />
		<module name="ParenPad" />
		<module name="TypecastParenPad" />
		<!--  <module name="TabCharacter" /> -->
		<module name="WhitespaceAfter" />
		<module name="WhitespaceAround">
			<property name="tokens"
				value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND" />
		</module>

		<!-- Modifier Checks                                    -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder" />
		<!--  <module name="RedundantModifier" /> -->

		<!-- Checks for blocks. You know, those {}'s         -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="EmptyBlock" />
		<module name="AvoidNestedBlocks" />
		<module name="LeftCurly" />
		<module name="NeedBraces" />
		<!-- Right Curly on the new line -->
		<module name="RightCurly">
			<property name="option" value="alone" />
		</module>

		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<!--<module name="AvoidInlineConditionals" />-->
		<module name="DoubleCheckedLocking" />
		<module name="EmptyStatement" />
		<module name="EqualsHashCode" />
		<module name="HiddenField">
			<property name="ignoreConstructorParameter" value="true" />
			<property name="ignoreSetter" value="true" />
			<property name="ignoreAbstractMethods" value="true" />
		</module>
		<module name="IllegalInstantiation" />
		<module name="InnerAssignment" />
		<module name="MagicNumber">
			<property name="severity" value="info" />	
		</module>
		<module name="MissingSwitchDefault" />
		<module name="RedundantThrows">
			<property name="allowUnchecked" value="true"/>
		</module>
		<module name="SimplifyBooleanExpression" />
		<module name="SimplifyBooleanReturn" />
		<module name="NestedIfDepth">
			<property name="max" value="3" />
		</module>
		<module name="NestedTryDepth">
			<property name="max" value="3" />
		</module>
		<module name="IllegalCatch">
			 <property name="severity" value="info"/>
		</module>
		<module name="IllegalThrows" />
		<module name="PackageDeclaration" />
		<module name="ParameterAssignment">
			<property name="severity" value="info"/>
		</module>
		<!--  
			<module name="RequireThis">
			<property name="checkMethods" value="false" />
			</module>
		-->
		<module name="UnnecessaryParentheses" />
		<module name="MultipleStringLiterals">
			<property name="allowedDuplicates" value="5" />
		</module>

		<!-- Checks for class design                         -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<!--  <module name="DesignForExtension" /> -->
		<module name="FinalClass" />
		<module name="HideUtilityClassConstructor" />
		<module name="InterfaceIsType" />
		<module name="VisibilityModifier">
			<property name="protectedAllowed" value="true"/>
		</module>

		<!-- Miscellaneous other checks.                   -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="ArrayTypeStyle" />
		<!--  <module name="FinalParameters" /> -->
		<module name="TodoComment" />
		<module name="UpperEll" />
		<module name="GenericIllegalRegexp">
			<property name="format" value="\s+$" />
			<property name="ignoreComments" value="true" />
			<property name="message" value="Line has trailing spaces." />
		</module>
		<module name="GenericIllegalRegexp">
			<property name="format" value="System\.out\.println" />
			<property name="ignoreComments" value="true" />
			<property name="message"
				value="Line has testing print stmt." />
		</module>
		<module name="GenericIllegalRegexp">
			<property name="format" value="printStackTrace()" />
			<property name="ignoreComments" value="true" />
			<property name="message"
				value="have processed the exception?" />
		</module>
		<module name="UncommentedMain">
			<property name="excludedClasses" value="^.*Launcher$" />
		</module>
		<module name="TrailingComment" />
		
		<module name="VisibilityModifier">
			<property name="protectedAllowed" value="true"/>
			<property name="packageAllowed" value="true"/>
		</module>
 		<module name="SimplifyBooleanReturn" />
        <module name="UnusedImports" />
	</module>
</module>
